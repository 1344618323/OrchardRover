// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: costmap_parameter_setting.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "costmap_parameter_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace or_costmap {
class ParaCostmapInterfaceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParaCostmapInterface>
     _instance;
} _ParaCostmapInterface_default_instance_;
class PointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Point>
     _instance;
} _Point_default_instance_;
class FootprintDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Footprint>
     _instance;
} _Footprint_default_instance_;
class ParaCollectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParaCollection>
     _instance;
} _ParaCollection_default_instance_;

namespace protobuf_costmap_5fparameter_5fsetting_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, global_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, robot_base_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, footprint_padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, transform_tolerance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, is_tracking_unknown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, is_rolling_window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, has_obstacle_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, has_static_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, static_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, obstacle_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, inflation_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, map_update_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCostmapInterface, get_footprint_),
  0,
  1,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  2,
  3,
  4,
  17,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footprint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footprint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footprint, point_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCollection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCollection, para_costmap_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaCollection, footprint_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 23, sizeof(ParaCostmapInterface)},
  { 41, 48, sizeof(Point)},
  { 50, 56, sizeof(Footprint)},
  { 57, 64, sizeof(ParaCollection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParaCostmapInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Footprint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParaCollection_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "costmap_parameter_setting.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ParaCostmapInterface_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParaCostmapInterface_default_instance_);_Point_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Point_default_instance_);_Footprint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Footprint_default_instance_);_ParaCollection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParaCollection_default_instance_);_ParaCollection_default_instance_._instance.get_mutable()->para_costmap_interface_ = const_cast< ::or_costmap::ParaCostmapInterface*>(
      ::or_costmap::ParaCostmapInterface::internal_default_instance());
  _ParaCollection_default_instance_._instance.get_mutable()->footprint_ = const_cast< ::or_costmap::Footprint*>(
      ::or_costmap::Footprint::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037costmap_parameter_setting.proto\022\nor_co"
      "stmap\"\337\003\n\024ParaCostmapInterface\022\024\n\014global"
      "_frame\030\001 \002(\t\022\030\n\020robot_base_frame\030\002 \002(\t\022\031"
      "\n\021footprint_padding\030\003 \002(\001\022\033\n\023transform_t"
      "olerance\030\004 \002(\001\022\021\n\tmap_width\030\005 \002(\001\022\022\n\nmap"
      "_height\030\006 \002(\001\022\024\n\014map_origin_x\030\007 \002(\001\022\024\n\014m"
      "ap_origin_y\030\010 \002(\001\022\026\n\016map_resolution\030\t \002("
      "\001\022\033\n\023is_tracking_unknown\030\n \002(\010\022\031\n\021is_rol"
      "ling_window\030\013 \002(\010\022\032\n\022has_obstacle_layer\030"
      "\014 \002(\010\022\030\n\020has_static_layer\030\r \002(\010\022\030\n\020stati"
      "c_file_path\030\016 \001(\t\022\032\n\022obstacle_file_path\030"
      "\017 \001(\t\022\033\n\023inflation_file_path\030\020 \002(\t\022\034\n\024ma"
      "p_update_frequency\030\021 \002(\001\022\025\n\rget_footprin"
      "t\030\022 \001(\010\"\035\n\005Point\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"-"
      "\n\tFootprint\022 \n\005point\030\001 \003(\0132\021.or_costmap."
      "Point\"|\n\016ParaCollection\022@\n\026para_costmap_"
      "interface\030\001 \002(\0132 .or_costmap.ParaCostmap"
      "Interface\022(\n\tfootprint\030\002 \002(\0132\025.or_costma"
      "p.Footprint"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 731);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "costmap_parameter_setting.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_costmap_5fparameter_5fsetting_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaCostmapInterface::kGlobalFrameFieldNumber;
const int ParaCostmapInterface::kRobotBaseFrameFieldNumber;
const int ParaCostmapInterface::kFootprintPaddingFieldNumber;
const int ParaCostmapInterface::kTransformToleranceFieldNumber;
const int ParaCostmapInterface::kMapWidthFieldNumber;
const int ParaCostmapInterface::kMapHeightFieldNumber;
const int ParaCostmapInterface::kMapOriginXFieldNumber;
const int ParaCostmapInterface::kMapOriginYFieldNumber;
const int ParaCostmapInterface::kMapResolutionFieldNumber;
const int ParaCostmapInterface::kIsTrackingUnknownFieldNumber;
const int ParaCostmapInterface::kIsRollingWindowFieldNumber;
const int ParaCostmapInterface::kHasObstacleLayerFieldNumber;
const int ParaCostmapInterface::kHasStaticLayerFieldNumber;
const int ParaCostmapInterface::kStaticFilePathFieldNumber;
const int ParaCostmapInterface::kObstacleFilePathFieldNumber;
const int ParaCostmapInterface::kInflationFilePathFieldNumber;
const int ParaCostmapInterface::kMapUpdateFrequencyFieldNumber;
const int ParaCostmapInterface::kGetFootprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaCostmapInterface::ParaCostmapInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:or_costmap.ParaCostmapInterface)
}
ParaCostmapInterface::ParaCostmapInterface(const ParaCostmapInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  global_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_global_frame()) {
    global_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.global_frame_);
  }
  robot_base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_robot_base_frame()) {
    robot_base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_base_frame_);
  }
  static_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_static_file_path()) {
    static_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.static_file_path_);
  }
  obstacle_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_obstacle_file_path()) {
    obstacle_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obstacle_file_path_);
  }
  inflation_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inflation_file_path()) {
    inflation_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_file_path_);
  }
  ::memcpy(&footprint_padding_, &from.footprint_padding_,
    static_cast<size_t>(reinterpret_cast<char*>(&map_update_frequency_) -
    reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_update_frequency_));
  // @@protoc_insertion_point(copy_constructor:or_costmap.ParaCostmapInterface)
}

void ParaCostmapInterface::SharedCtor() {
  _cached_size_ = 0;
  global_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  static_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obstacle_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&footprint_padding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_update_frequency_) -
      reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_update_frequency_));
}

ParaCostmapInterface::~ParaCostmapInterface() {
  // @@protoc_insertion_point(destructor:or_costmap.ParaCostmapInterface)
  SharedDtor();
}

void ParaCostmapInterface::SharedDtor() {
  global_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_base_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  static_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obstacle_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParaCostmapInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParaCostmapInterface::descriptor() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaCostmapInterface& ParaCostmapInterface::default_instance() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParaCostmapInterface* ParaCostmapInterface::New(::google::protobuf::Arena* arena) const {
  ParaCostmapInterface* n = new ParaCostmapInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParaCostmapInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:or_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!global_frame_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*global_frame_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!robot_base_frame_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*robot_base_frame_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!static_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*static_file_path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!obstacle_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*obstacle_file_path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!inflation_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*inflation_file_path_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&footprint_padding_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&map_width_) -
        reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_width_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&map_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&has_static_layer_) -
        reinterpret_cast<char*>(&map_height_)) + sizeof(has_static_layer_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&get_footprint_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&map_update_frequency_) -
        reinterpret_cast<char*>(&get_footprint_)) + sizeof(map_update_frequency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaCostmapInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:or_costmap.ParaCostmapInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string global_frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_global_frame()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->global_frame().data(), static_cast<int>(this->global_frame().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "or_costmap.ParaCostmapInterface.global_frame");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string robot_base_frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_base_frame()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "or_costmap.ParaCostmapInterface.robot_base_frame");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double footprint_padding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_footprint_padding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &footprint_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double transform_tolerance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_transform_tolerance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transform_tolerance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_map_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_map_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_origin_x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_map_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_origin_y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_map_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_resolution = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_map_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_tracking_unknown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_tracking_unknown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tracking_unknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_rolling_window = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_is_rolling_window();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rolling_window_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_obstacle_layer = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_has_obstacle_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_obstacle_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_static_layer = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_has_static_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_static_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string static_file_path = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_static_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->static_file_path().data(), static_cast<int>(this->static_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "or_costmap.ParaCostmapInterface.static_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string obstacle_file_path = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obstacle_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obstacle_file_path().data(), static_cast<int>(this->obstacle_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "or_costmap.ParaCostmapInterface.obstacle_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string inflation_file_path = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inflation_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "or_costmap.ParaCostmapInterface.inflation_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_update_frequency = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {
          set_has_map_update_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_update_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool get_footprint = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_get_footprint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &get_footprint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:or_costmap.ParaCostmapInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:or_costmap.ParaCostmapInterface)
  return false;
#undef DO_
}

void ParaCostmapInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:or_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string global_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->global_frame().data(), static_cast<int>(this->global_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.global_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->global_frame(), output);
  }

  // required string robot_base_frame = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.robot_base_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->robot_base_frame(), output);
  }

  // required double footprint_padding = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->footprint_padding(), output);
  }

  // required double transform_tolerance = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->transform_tolerance(), output);
  }

  // required double map_width = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->map_width(), output);
  }

  // required double map_height = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->map_height(), output);
  }

  // required double map_origin_x = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->map_origin_x(), output);
  }

  // required double map_origin_y = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->map_origin_y(), output);
  }

  // required double map_resolution = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->map_resolution(), output);
  }

  // required bool is_tracking_unknown = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_tracking_unknown(), output);
  }

  // required bool is_rolling_window = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_rolling_window(), output);
  }

  // required bool has_obstacle_layer = 12;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->has_obstacle_layer(), output);
  }

  // required bool has_static_layer = 13;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->has_static_layer(), output);
  }

  // optional string static_file_path = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->static_file_path().data(), static_cast<int>(this->static_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.static_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->static_file_path(), output);
  }

  // optional string obstacle_file_path = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obstacle_file_path().data(), static_cast<int>(this->obstacle_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.obstacle_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->obstacle_file_path(), output);
  }

  // required string inflation_file_path = 16;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.inflation_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->inflation_file_path(), output);
  }

  // required double map_update_frequency = 17;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->map_update_frequency(), output);
  }

  // optional bool get_footprint = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->get_footprint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:or_costmap.ParaCostmapInterface)
}

::google::protobuf::uint8* ParaCostmapInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:or_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string global_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->global_frame().data(), static_cast<int>(this->global_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.global_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->global_frame(), target);
  }

  // required string robot_base_frame = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.robot_base_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->robot_base_frame(), target);
  }

  // required double footprint_padding = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->footprint_padding(), target);
  }

  // required double transform_tolerance = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->transform_tolerance(), target);
  }

  // required double map_width = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->map_width(), target);
  }

  // required double map_height = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->map_height(), target);
  }

  // required double map_origin_x = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->map_origin_x(), target);
  }

  // required double map_origin_y = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->map_origin_y(), target);
  }

  // required double map_resolution = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->map_resolution(), target);
  }

  // required bool is_tracking_unknown = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_tracking_unknown(), target);
  }

  // required bool is_rolling_window = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_rolling_window(), target);
  }

  // required bool has_obstacle_layer = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->has_obstacle_layer(), target);
  }

  // required bool has_static_layer = 13;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->has_static_layer(), target);
  }

  // optional string static_file_path = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->static_file_path().data(), static_cast<int>(this->static_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.static_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->static_file_path(), target);
  }

  // optional string obstacle_file_path = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obstacle_file_path().data(), static_cast<int>(this->obstacle_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.obstacle_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->obstacle_file_path(), target);
  }

  // required string inflation_file_path = 16;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "or_costmap.ParaCostmapInterface.inflation_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->inflation_file_path(), target);
  }

  // required double map_update_frequency = 17;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->map_update_frequency(), target);
  }

  // optional bool get_footprint = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->get_footprint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:or_costmap.ParaCostmapInterface)
  return target;
}

size_t ParaCostmapInterface::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:or_costmap.ParaCostmapInterface)
  size_t total_size = 0;

  if (has_global_frame()) {
    // required string global_frame = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->global_frame());
  }

  if (has_robot_base_frame()) {
    // required string robot_base_frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_base_frame());
  }

  if (has_inflation_file_path()) {
    // required string inflation_file_path = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inflation_file_path());
  }

  if (has_footprint_padding()) {
    // required double footprint_padding = 3;
    total_size += 1 + 8;
  }

  if (has_transform_tolerance()) {
    // required double transform_tolerance = 4;
    total_size += 1 + 8;
  }

  if (has_map_width()) {
    // required double map_width = 5;
    total_size += 1 + 8;
  }

  if (has_map_height()) {
    // required double map_height = 6;
    total_size += 1 + 8;
  }

  if (has_map_origin_x()) {
    // required double map_origin_x = 7;
    total_size += 1 + 8;
  }

  if (has_map_origin_y()) {
    // required double map_origin_y = 8;
    total_size += 1 + 8;
  }

  if (has_map_resolution()) {
    // required double map_resolution = 9;
    total_size += 1 + 8;
  }

  if (has_is_tracking_unknown()) {
    // required bool is_tracking_unknown = 10;
    total_size += 1 + 1;
  }

  if (has_is_rolling_window()) {
    // required bool is_rolling_window = 11;
    total_size += 1 + 1;
  }

  if (has_has_obstacle_layer()) {
    // required bool has_obstacle_layer = 12;
    total_size += 1 + 1;
  }

  if (has_has_static_layer()) {
    // required bool has_static_layer = 13;
    total_size += 1 + 1;
  }

  if (has_map_update_frequency()) {
    // required double map_update_frequency = 17;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t ParaCostmapInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:or_costmap.ParaCostmapInterface)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0002fff3) ^ 0x0002fff3) == 0) {  // All required fields are present.
    // required string global_frame = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->global_frame());

    // required string robot_base_frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_base_frame());

    // required string inflation_file_path = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inflation_file_path());

    // required double footprint_padding = 3;
    total_size += 1 + 8;

    // required double transform_tolerance = 4;
    total_size += 1 + 8;

    // required double map_width = 5;
    total_size += 1 + 8;

    // required double map_height = 6;
    total_size += 1 + 8;

    // required double map_origin_x = 7;
    total_size += 1 + 8;

    // required double map_origin_y = 8;
    total_size += 1 + 8;

    // required double map_resolution = 9;
    total_size += 1 + 8;

    // required bool is_tracking_unknown = 10;
    total_size += 1 + 1;

    // required bool is_rolling_window = 11;
    total_size += 1 + 1;

    // required bool has_obstacle_layer = 12;
    total_size += 1 + 1;

    // required bool has_static_layer = 13;
    total_size += 1 + 1;

    // required double map_update_frequency = 17;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional string static_file_path = 14;
    if (has_static_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->static_file_path());
    }

    // optional string obstacle_file_path = 15;
    if (has_obstacle_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->obstacle_file_path());
    }

  }
  // optional bool get_footprint = 18;
  if (has_get_footprint()) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParaCostmapInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:or_costmap.ParaCostmapInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaCostmapInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaCostmapInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:or_costmap.ParaCostmapInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:or_costmap.ParaCostmapInterface)
    MergeFrom(*source);
  }
}

void ParaCostmapInterface::MergeFrom(const ParaCostmapInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:or_costmap.ParaCostmapInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_global_frame();
      global_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.global_frame_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_robot_base_frame();
      robot_base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_base_frame_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_static_file_path();
      static_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.static_file_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_obstacle_file_path();
      obstacle_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obstacle_file_path_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_inflation_file_path();
      inflation_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_file_path_);
    }
    if (cached_has_bits & 0x00000020u) {
      footprint_padding_ = from.footprint_padding_;
    }
    if (cached_has_bits & 0x00000040u) {
      transform_tolerance_ = from.transform_tolerance_;
    }
    if (cached_has_bits & 0x00000080u) {
      map_width_ = from.map_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      map_height_ = from.map_height_;
    }
    if (cached_has_bits & 0x00000200u) {
      map_origin_x_ = from.map_origin_x_;
    }
    if (cached_has_bits & 0x00000400u) {
      map_origin_y_ = from.map_origin_y_;
    }
    if (cached_has_bits & 0x00000800u) {
      map_resolution_ = from.map_resolution_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_tracking_unknown_ = from.is_tracking_unknown_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_rolling_window_ = from.is_rolling_window_;
    }
    if (cached_has_bits & 0x00004000u) {
      has_obstacle_layer_ = from.has_obstacle_layer_;
    }
    if (cached_has_bits & 0x00008000u) {
      has_static_layer_ = from.has_static_layer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      get_footprint_ = from.get_footprint_;
    }
    if (cached_has_bits & 0x00020000u) {
      map_update_frequency_ = from.map_update_frequency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParaCostmapInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:or_costmap.ParaCostmapInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaCostmapInterface::CopyFrom(const ParaCostmapInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:or_costmap.ParaCostmapInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaCostmapInterface::IsInitialized() const {
  if ((_has_bits_[0] & 0x0002fff3) != 0x0002fff3) return false;
  return true;
}

void ParaCostmapInterface::Swap(ParaCostmapInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaCostmapInterface::InternalSwap(ParaCostmapInterface* other) {
  using std::swap;
  global_frame_.Swap(&other->global_frame_);
  robot_base_frame_.Swap(&other->robot_base_frame_);
  static_file_path_.Swap(&other->static_file_path_);
  obstacle_file_path_.Swap(&other->obstacle_file_path_);
  inflation_file_path_.Swap(&other->inflation_file_path_);
  swap(footprint_padding_, other->footprint_padding_);
  swap(transform_tolerance_, other->transform_tolerance_);
  swap(map_width_, other->map_width_);
  swap(map_height_, other->map_height_);
  swap(map_origin_x_, other->map_origin_x_);
  swap(map_origin_y_, other->map_origin_y_);
  swap(map_resolution_, other->map_resolution_);
  swap(is_tracking_unknown_, other->is_tracking_unknown_);
  swap(is_rolling_window_, other->is_rolling_window_);
  swap(has_obstacle_layer_, other->has_obstacle_layer_);
  swap(has_static_layer_, other->has_static_layer_);
  swap(get_footprint_, other->get_footprint_);
  swap(map_update_frequency_, other->map_update_frequency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParaCostmapInterface::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParaCostmapInterface

// required string global_frame = 1;
bool ParaCostmapInterface::has_global_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParaCostmapInterface::set_has_global_frame() {
  _has_bits_[0] |= 0x00000001u;
}
void ParaCostmapInterface::clear_has_global_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParaCostmapInterface::clear_global_frame() {
  global_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_global_frame();
}
const ::std::string& ParaCostmapInterface::global_frame() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.global_frame)
  return global_frame_.GetNoArena();
}
void ParaCostmapInterface::set_global_frame(const ::std::string& value) {
  set_has_global_frame();
  global_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.global_frame)
}
#if LANG_CXX11
void ParaCostmapInterface::set_global_frame(::std::string&& value) {
  set_has_global_frame();
  global_frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:or_costmap.ParaCostmapInterface.global_frame)
}
#endif
void ParaCostmapInterface::set_global_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_global_frame();
  global_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:or_costmap.ParaCostmapInterface.global_frame)
}
void ParaCostmapInterface::set_global_frame(const char* value, size_t size) {
  set_has_global_frame();
  global_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:or_costmap.ParaCostmapInterface.global_frame)
}
::std::string* ParaCostmapInterface::mutable_global_frame() {
  set_has_global_frame();
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCostmapInterface.global_frame)
  return global_frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParaCostmapInterface::release_global_frame() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCostmapInterface.global_frame)
  clear_has_global_frame();
  return global_frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParaCostmapInterface::set_allocated_global_frame(::std::string* global_frame) {
  if (global_frame != NULL) {
    set_has_global_frame();
  } else {
    clear_has_global_frame();
  }
  global_frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), global_frame);
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCostmapInterface.global_frame)
}

// required string robot_base_frame = 2;
bool ParaCostmapInterface::has_robot_base_frame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParaCostmapInterface::set_has_robot_base_frame() {
  _has_bits_[0] |= 0x00000002u;
}
void ParaCostmapInterface::clear_has_robot_base_frame() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParaCostmapInterface::clear_robot_base_frame() {
  robot_base_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robot_base_frame();
}
const ::std::string& ParaCostmapInterface::robot_base_frame() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.robot_base_frame)
  return robot_base_frame_.GetNoArena();
}
void ParaCostmapInterface::set_robot_base_frame(const ::std::string& value) {
  set_has_robot_base_frame();
  robot_base_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.robot_base_frame)
}
#if LANG_CXX11
void ParaCostmapInterface::set_robot_base_frame(::std::string&& value) {
  set_has_robot_base_frame();
  robot_base_frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:or_costmap.ParaCostmapInterface.robot_base_frame)
}
#endif
void ParaCostmapInterface::set_robot_base_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_robot_base_frame();
  robot_base_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:or_costmap.ParaCostmapInterface.robot_base_frame)
}
void ParaCostmapInterface::set_robot_base_frame(const char* value, size_t size) {
  set_has_robot_base_frame();
  robot_base_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:or_costmap.ParaCostmapInterface.robot_base_frame)
}
::std::string* ParaCostmapInterface::mutable_robot_base_frame() {
  set_has_robot_base_frame();
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCostmapInterface.robot_base_frame)
  return robot_base_frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParaCostmapInterface::release_robot_base_frame() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCostmapInterface.robot_base_frame)
  clear_has_robot_base_frame();
  return robot_base_frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParaCostmapInterface::set_allocated_robot_base_frame(::std::string* robot_base_frame) {
  if (robot_base_frame != NULL) {
    set_has_robot_base_frame();
  } else {
    clear_has_robot_base_frame();
  }
  robot_base_frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_base_frame);
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCostmapInterface.robot_base_frame)
}

// required double footprint_padding = 3;
bool ParaCostmapInterface::has_footprint_padding() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ParaCostmapInterface::set_has_footprint_padding() {
  _has_bits_[0] |= 0x00000020u;
}
void ParaCostmapInterface::clear_has_footprint_padding() {
  _has_bits_[0] &= ~0x00000020u;
}
void ParaCostmapInterface::clear_footprint_padding() {
  footprint_padding_ = 0;
  clear_has_footprint_padding();
}
double ParaCostmapInterface::footprint_padding() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.footprint_padding)
  return footprint_padding_;
}
void ParaCostmapInterface::set_footprint_padding(double value) {
  set_has_footprint_padding();
  footprint_padding_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.footprint_padding)
}

// required double transform_tolerance = 4;
bool ParaCostmapInterface::has_transform_tolerance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ParaCostmapInterface::set_has_transform_tolerance() {
  _has_bits_[0] |= 0x00000040u;
}
void ParaCostmapInterface::clear_has_transform_tolerance() {
  _has_bits_[0] &= ~0x00000040u;
}
void ParaCostmapInterface::clear_transform_tolerance() {
  transform_tolerance_ = 0;
  clear_has_transform_tolerance();
}
double ParaCostmapInterface::transform_tolerance() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.transform_tolerance)
  return transform_tolerance_;
}
void ParaCostmapInterface::set_transform_tolerance(double value) {
  set_has_transform_tolerance();
  transform_tolerance_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.transform_tolerance)
}

// required double map_width = 5;
bool ParaCostmapInterface::has_map_width() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ParaCostmapInterface::set_has_map_width() {
  _has_bits_[0] |= 0x00000080u;
}
void ParaCostmapInterface::clear_has_map_width() {
  _has_bits_[0] &= ~0x00000080u;
}
void ParaCostmapInterface::clear_map_width() {
  map_width_ = 0;
  clear_has_map_width();
}
double ParaCostmapInterface::map_width() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_width)
  return map_width_;
}
void ParaCostmapInterface::set_map_width(double value) {
  set_has_map_width();
  map_width_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_width)
}

// required double map_height = 6;
bool ParaCostmapInterface::has_map_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ParaCostmapInterface::set_has_map_height() {
  _has_bits_[0] |= 0x00000100u;
}
void ParaCostmapInterface::clear_has_map_height() {
  _has_bits_[0] &= ~0x00000100u;
}
void ParaCostmapInterface::clear_map_height() {
  map_height_ = 0;
  clear_has_map_height();
}
double ParaCostmapInterface::map_height() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_height)
  return map_height_;
}
void ParaCostmapInterface::set_map_height(double value) {
  set_has_map_height();
  map_height_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_height)
}

// required double map_origin_x = 7;
bool ParaCostmapInterface::has_map_origin_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ParaCostmapInterface::set_has_map_origin_x() {
  _has_bits_[0] |= 0x00000200u;
}
void ParaCostmapInterface::clear_has_map_origin_x() {
  _has_bits_[0] &= ~0x00000200u;
}
void ParaCostmapInterface::clear_map_origin_x() {
  map_origin_x_ = 0;
  clear_has_map_origin_x();
}
double ParaCostmapInterface::map_origin_x() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_origin_x)
  return map_origin_x_;
}
void ParaCostmapInterface::set_map_origin_x(double value) {
  set_has_map_origin_x();
  map_origin_x_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_origin_x)
}

// required double map_origin_y = 8;
bool ParaCostmapInterface::has_map_origin_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ParaCostmapInterface::set_has_map_origin_y() {
  _has_bits_[0] |= 0x00000400u;
}
void ParaCostmapInterface::clear_has_map_origin_y() {
  _has_bits_[0] &= ~0x00000400u;
}
void ParaCostmapInterface::clear_map_origin_y() {
  map_origin_y_ = 0;
  clear_has_map_origin_y();
}
double ParaCostmapInterface::map_origin_y() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_origin_y)
  return map_origin_y_;
}
void ParaCostmapInterface::set_map_origin_y(double value) {
  set_has_map_origin_y();
  map_origin_y_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_origin_y)
}

// required double map_resolution = 9;
bool ParaCostmapInterface::has_map_resolution() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ParaCostmapInterface::set_has_map_resolution() {
  _has_bits_[0] |= 0x00000800u;
}
void ParaCostmapInterface::clear_has_map_resolution() {
  _has_bits_[0] &= ~0x00000800u;
}
void ParaCostmapInterface::clear_map_resolution() {
  map_resolution_ = 0;
  clear_has_map_resolution();
}
double ParaCostmapInterface::map_resolution() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_resolution)
  return map_resolution_;
}
void ParaCostmapInterface::set_map_resolution(double value) {
  set_has_map_resolution();
  map_resolution_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_resolution)
}

// required bool is_tracking_unknown = 10;
bool ParaCostmapInterface::has_is_tracking_unknown() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ParaCostmapInterface::set_has_is_tracking_unknown() {
  _has_bits_[0] |= 0x00001000u;
}
void ParaCostmapInterface::clear_has_is_tracking_unknown() {
  _has_bits_[0] &= ~0x00001000u;
}
void ParaCostmapInterface::clear_is_tracking_unknown() {
  is_tracking_unknown_ = false;
  clear_has_is_tracking_unknown();
}
bool ParaCostmapInterface::is_tracking_unknown() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.is_tracking_unknown)
  return is_tracking_unknown_;
}
void ParaCostmapInterface::set_is_tracking_unknown(bool value) {
  set_has_is_tracking_unknown();
  is_tracking_unknown_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.is_tracking_unknown)
}

// required bool is_rolling_window = 11;
bool ParaCostmapInterface::has_is_rolling_window() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ParaCostmapInterface::set_has_is_rolling_window() {
  _has_bits_[0] |= 0x00002000u;
}
void ParaCostmapInterface::clear_has_is_rolling_window() {
  _has_bits_[0] &= ~0x00002000u;
}
void ParaCostmapInterface::clear_is_rolling_window() {
  is_rolling_window_ = false;
  clear_has_is_rolling_window();
}
bool ParaCostmapInterface::is_rolling_window() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.is_rolling_window)
  return is_rolling_window_;
}
void ParaCostmapInterface::set_is_rolling_window(bool value) {
  set_has_is_rolling_window();
  is_rolling_window_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.is_rolling_window)
}

// required bool has_obstacle_layer = 12;
bool ParaCostmapInterface::has_has_obstacle_layer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ParaCostmapInterface::set_has_has_obstacle_layer() {
  _has_bits_[0] |= 0x00004000u;
}
void ParaCostmapInterface::clear_has_has_obstacle_layer() {
  _has_bits_[0] &= ~0x00004000u;
}
void ParaCostmapInterface::clear_has_obstacle_layer() {
  has_obstacle_layer_ = false;
  clear_has_has_obstacle_layer();
}
bool ParaCostmapInterface::has_obstacle_layer() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.has_obstacle_layer)
  return has_obstacle_layer_;
}
void ParaCostmapInterface::set_has_obstacle_layer(bool value) {
  set_has_has_obstacle_layer();
  has_obstacle_layer_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.has_obstacle_layer)
}

// required bool has_static_layer = 13;
bool ParaCostmapInterface::has_has_static_layer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ParaCostmapInterface::set_has_has_static_layer() {
  _has_bits_[0] |= 0x00008000u;
}
void ParaCostmapInterface::clear_has_has_static_layer() {
  _has_bits_[0] &= ~0x00008000u;
}
void ParaCostmapInterface::clear_has_static_layer() {
  has_static_layer_ = false;
  clear_has_has_static_layer();
}
bool ParaCostmapInterface::has_static_layer() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.has_static_layer)
  return has_static_layer_;
}
void ParaCostmapInterface::set_has_static_layer(bool value) {
  set_has_has_static_layer();
  has_static_layer_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.has_static_layer)
}

// optional string static_file_path = 14;
bool ParaCostmapInterface::has_static_file_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ParaCostmapInterface::set_has_static_file_path() {
  _has_bits_[0] |= 0x00000004u;
}
void ParaCostmapInterface::clear_has_static_file_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void ParaCostmapInterface::clear_static_file_path() {
  static_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_static_file_path();
}
const ::std::string& ParaCostmapInterface::static_file_path() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.static_file_path)
  return static_file_path_.GetNoArena();
}
void ParaCostmapInterface::set_static_file_path(const ::std::string& value) {
  set_has_static_file_path();
  static_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.static_file_path)
}
#if LANG_CXX11
void ParaCostmapInterface::set_static_file_path(::std::string&& value) {
  set_has_static_file_path();
  static_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:or_costmap.ParaCostmapInterface.static_file_path)
}
#endif
void ParaCostmapInterface::set_static_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_static_file_path();
  static_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:or_costmap.ParaCostmapInterface.static_file_path)
}
void ParaCostmapInterface::set_static_file_path(const char* value, size_t size) {
  set_has_static_file_path();
  static_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:or_costmap.ParaCostmapInterface.static_file_path)
}
::std::string* ParaCostmapInterface::mutable_static_file_path() {
  set_has_static_file_path();
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCostmapInterface.static_file_path)
  return static_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParaCostmapInterface::release_static_file_path() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCostmapInterface.static_file_path)
  clear_has_static_file_path();
  return static_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParaCostmapInterface::set_allocated_static_file_path(::std::string* static_file_path) {
  if (static_file_path != NULL) {
    set_has_static_file_path();
  } else {
    clear_has_static_file_path();
  }
  static_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), static_file_path);
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCostmapInterface.static_file_path)
}

// optional string obstacle_file_path = 15;
bool ParaCostmapInterface::has_obstacle_file_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ParaCostmapInterface::set_has_obstacle_file_path() {
  _has_bits_[0] |= 0x00000008u;
}
void ParaCostmapInterface::clear_has_obstacle_file_path() {
  _has_bits_[0] &= ~0x00000008u;
}
void ParaCostmapInterface::clear_obstacle_file_path() {
  obstacle_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obstacle_file_path();
}
const ::std::string& ParaCostmapInterface::obstacle_file_path() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.obstacle_file_path)
  return obstacle_file_path_.GetNoArena();
}
void ParaCostmapInterface::set_obstacle_file_path(const ::std::string& value) {
  set_has_obstacle_file_path();
  obstacle_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.obstacle_file_path)
}
#if LANG_CXX11
void ParaCostmapInterface::set_obstacle_file_path(::std::string&& value) {
  set_has_obstacle_file_path();
  obstacle_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:or_costmap.ParaCostmapInterface.obstacle_file_path)
}
#endif
void ParaCostmapInterface::set_obstacle_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_obstacle_file_path();
  obstacle_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:or_costmap.ParaCostmapInterface.obstacle_file_path)
}
void ParaCostmapInterface::set_obstacle_file_path(const char* value, size_t size) {
  set_has_obstacle_file_path();
  obstacle_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:or_costmap.ParaCostmapInterface.obstacle_file_path)
}
::std::string* ParaCostmapInterface::mutable_obstacle_file_path() {
  set_has_obstacle_file_path();
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCostmapInterface.obstacle_file_path)
  return obstacle_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParaCostmapInterface::release_obstacle_file_path() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCostmapInterface.obstacle_file_path)
  clear_has_obstacle_file_path();
  return obstacle_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParaCostmapInterface::set_allocated_obstacle_file_path(::std::string* obstacle_file_path) {
  if (obstacle_file_path != NULL) {
    set_has_obstacle_file_path();
  } else {
    clear_has_obstacle_file_path();
  }
  obstacle_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obstacle_file_path);
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCostmapInterface.obstacle_file_path)
}

// required string inflation_file_path = 16;
bool ParaCostmapInterface::has_inflation_file_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ParaCostmapInterface::set_has_inflation_file_path() {
  _has_bits_[0] |= 0x00000010u;
}
void ParaCostmapInterface::clear_has_inflation_file_path() {
  _has_bits_[0] &= ~0x00000010u;
}
void ParaCostmapInterface::clear_inflation_file_path() {
  inflation_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inflation_file_path();
}
const ::std::string& ParaCostmapInterface::inflation_file_path() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.inflation_file_path)
  return inflation_file_path_.GetNoArena();
}
void ParaCostmapInterface::set_inflation_file_path(const ::std::string& value) {
  set_has_inflation_file_path();
  inflation_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.inflation_file_path)
}
#if LANG_CXX11
void ParaCostmapInterface::set_inflation_file_path(::std::string&& value) {
  set_has_inflation_file_path();
  inflation_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:or_costmap.ParaCostmapInterface.inflation_file_path)
}
#endif
void ParaCostmapInterface::set_inflation_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inflation_file_path();
  inflation_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:or_costmap.ParaCostmapInterface.inflation_file_path)
}
void ParaCostmapInterface::set_inflation_file_path(const char* value, size_t size) {
  set_has_inflation_file_path();
  inflation_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:or_costmap.ParaCostmapInterface.inflation_file_path)
}
::std::string* ParaCostmapInterface::mutable_inflation_file_path() {
  set_has_inflation_file_path();
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCostmapInterface.inflation_file_path)
  return inflation_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParaCostmapInterface::release_inflation_file_path() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCostmapInterface.inflation_file_path)
  clear_has_inflation_file_path();
  return inflation_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParaCostmapInterface::set_allocated_inflation_file_path(::std::string* inflation_file_path) {
  if (inflation_file_path != NULL) {
    set_has_inflation_file_path();
  } else {
    clear_has_inflation_file_path();
  }
  inflation_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inflation_file_path);
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCostmapInterface.inflation_file_path)
}

// required double map_update_frequency = 17;
bool ParaCostmapInterface::has_map_update_frequency() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ParaCostmapInterface::set_has_map_update_frequency() {
  _has_bits_[0] |= 0x00020000u;
}
void ParaCostmapInterface::clear_has_map_update_frequency() {
  _has_bits_[0] &= ~0x00020000u;
}
void ParaCostmapInterface::clear_map_update_frequency() {
  map_update_frequency_ = 0;
  clear_has_map_update_frequency();
}
double ParaCostmapInterface::map_update_frequency() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.map_update_frequency)
  return map_update_frequency_;
}
void ParaCostmapInterface::set_map_update_frequency(double value) {
  set_has_map_update_frequency();
  map_update_frequency_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.map_update_frequency)
}

// optional bool get_footprint = 18;
bool ParaCostmapInterface::has_get_footprint() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ParaCostmapInterface::set_has_get_footprint() {
  _has_bits_[0] |= 0x00010000u;
}
void ParaCostmapInterface::clear_has_get_footprint() {
  _has_bits_[0] &= ~0x00010000u;
}
void ParaCostmapInterface::clear_get_footprint() {
  get_footprint_ = false;
  clear_has_get_footprint();
}
bool ParaCostmapInterface::get_footprint() const {
  // @@protoc_insertion_point(field_get:or_costmap.ParaCostmapInterface.get_footprint)
  return get_footprint_;
}
void ParaCostmapInterface::set_get_footprint(bool value) {
  set_has_get_footprint();
  get_footprint_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.ParaCostmapInterface.get_footprint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:or_costmap.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:or_costmap.Point)
}

void Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:or_costmap.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point* Point::New(::google::protobuf::Arena* arena) const {
  Point* n = new Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:or_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:or_costmap.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:or_costmap.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:or_costmap.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:or_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:or_costmap.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:or_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:or_costmap.Point)
  return target;
}

size_t Point::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:or_costmap.Point)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:or_costmap.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:or_costmap.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:or_costmap.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:or_costmap.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:or_costmap.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:or_costmap.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:or_costmap.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// required double x = 1;
bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
double Point::x() const {
  // @@protoc_insertion_point(field_get:or_costmap.Point.x)
  return x_;
}
void Point::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.Point.x)
}

// required double y = 2;
bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
double Point::y() const {
  // @@protoc_insertion_point(field_get:or_costmap.Point.y)
  return y_;
}
void Point::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:or_costmap.Point.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Footprint::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Footprint::Footprint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:or_costmap.Footprint)
}
Footprint::Footprint(const Footprint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:or_costmap.Footprint)
}

void Footprint::SharedCtor() {
  _cached_size_ = 0;
}

Footprint::~Footprint() {
  // @@protoc_insertion_point(destructor:or_costmap.Footprint)
  SharedDtor();
}

void Footprint::SharedDtor() {
}

void Footprint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Footprint::descriptor() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Footprint& Footprint::default_instance() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

Footprint* Footprint::New(::google::protobuf::Arena* arena) const {
  Footprint* n = new Footprint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Footprint::Clear() {
// @@protoc_insertion_point(message_clear_start:or_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Footprint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:or_costmap.Footprint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .or_costmap.Point point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:or_costmap.Footprint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:or_costmap.Footprint)
  return false;
#undef DO_
}

void Footprint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:or_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .or_costmap.Point point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:or_costmap.Footprint)
}

::google::protobuf::uint8* Footprint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:or_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .or_costmap.Point point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:or_costmap.Footprint)
  return target;
}

size_t Footprint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:or_costmap.Footprint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .or_costmap.Point point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Footprint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:or_costmap.Footprint)
  GOOGLE_DCHECK_NE(&from, this);
  const Footprint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Footprint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:or_costmap.Footprint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:or_costmap.Footprint)
    MergeFrom(*source);
  }
}

void Footprint::MergeFrom(const Footprint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:or_costmap.Footprint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
}

void Footprint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:or_costmap.Footprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Footprint::CopyFrom(const Footprint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:or_costmap.Footprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Footprint::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->point())) return false;
  return true;
}

void Footprint::Swap(Footprint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Footprint::InternalSwap(Footprint* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Footprint::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Footprint

// repeated .or_costmap.Point point = 1;
int Footprint::point_size() const {
  return point_.size();
}
void Footprint::clear_point() {
  point_.Clear();
}
const ::or_costmap::Point& Footprint::point(int index) const {
  // @@protoc_insertion_point(field_get:or_costmap.Footprint.point)
  return point_.Get(index);
}
::or_costmap::Point* Footprint::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:or_costmap.Footprint.point)
  return point_.Mutable(index);
}
::or_costmap::Point* Footprint::add_point() {
  // @@protoc_insertion_point(field_add:or_costmap.Footprint.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::or_costmap::Point >*
Footprint::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:or_costmap.Footprint.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::or_costmap::Point >&
Footprint::point() const {
  // @@protoc_insertion_point(field_list:or_costmap.Footprint.point)
  return point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaCollection::kParaCostmapInterfaceFieldNumber;
const int ParaCollection::kFootprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaCollection::ParaCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:or_costmap.ParaCollection)
}
ParaCollection::ParaCollection(const ParaCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_para_costmap_interface()) {
    para_costmap_interface_ = new ::or_costmap::ParaCostmapInterface(*from.para_costmap_interface_);
  } else {
    para_costmap_interface_ = NULL;
  }
  if (from.has_footprint()) {
    footprint_ = new ::or_costmap::Footprint(*from.footprint_);
  } else {
    footprint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:or_costmap.ParaCollection)
}

void ParaCollection::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&para_costmap_interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&footprint_) -
      reinterpret_cast<char*>(&para_costmap_interface_)) + sizeof(footprint_));
}

ParaCollection::~ParaCollection() {
  // @@protoc_insertion_point(destructor:or_costmap.ParaCollection)
  SharedDtor();
}

void ParaCollection::SharedDtor() {
  if (this != internal_default_instance()) delete para_costmap_interface_;
  if (this != internal_default_instance()) delete footprint_;
}

void ParaCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParaCollection::descriptor() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaCollection& ParaCollection::default_instance() {
  protobuf_costmap_5fparameter_5fsetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParaCollection* ParaCollection::New(::google::protobuf::Arena* arena) const {
  ParaCollection* n = new ParaCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParaCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:or_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(para_costmap_interface_ != NULL);
      para_costmap_interface_->::or_costmap::ParaCostmapInterface::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(footprint_ != NULL);
      footprint_->::or_costmap::Footprint::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:or_costmap.ParaCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_para_costmap_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .or_costmap.Footprint footprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_footprint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:or_costmap.ParaCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:or_costmap.ParaCollection)
  return false;
#undef DO_
}

void ParaCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:or_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->para_costmap_interface_, output);
  }

  // required .or_costmap.Footprint footprint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->footprint_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:or_costmap.ParaCollection)
}

::google::protobuf::uint8* ParaCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:or_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->para_costmap_interface_, deterministic, target);
  }

  // required .or_costmap.Footprint footprint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->footprint_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:or_costmap.ParaCollection)
  return target;
}

size_t ParaCollection::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:or_costmap.ParaCollection)
  size_t total_size = 0;

  if (has_para_costmap_interface()) {
    // required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->para_costmap_interface_);
  }

  if (has_footprint()) {
    // required .or_costmap.Footprint footprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->footprint_);
  }

  return total_size;
}
size_t ParaCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:or_costmap.ParaCollection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->para_costmap_interface_);

    // required .or_costmap.Footprint footprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->footprint_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParaCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:or_costmap.ParaCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:or_costmap.ParaCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:or_costmap.ParaCollection)
    MergeFrom(*source);
  }
}

void ParaCollection::MergeFrom(const ParaCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:or_costmap.ParaCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_para_costmap_interface()->::or_costmap::ParaCostmapInterface::MergeFrom(from.para_costmap_interface());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_footprint()->::or_costmap::Footprint::MergeFrom(from.footprint());
    }
  }
}

void ParaCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:or_costmap.ParaCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaCollection::CopyFrom(const ParaCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:or_costmap.ParaCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaCollection::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_para_costmap_interface()) {
    if (!this->para_costmap_interface_->IsInitialized()) return false;
  }
  if (has_footprint()) {
    if (!this->footprint_->IsInitialized()) return false;
  }
  return true;
}

void ParaCollection::Swap(ParaCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaCollection::InternalSwap(ParaCollection* other) {
  using std::swap;
  swap(para_costmap_interface_, other->para_costmap_interface_);
  swap(footprint_, other->footprint_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParaCollection::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParaCollection

// required .or_costmap.ParaCostmapInterface para_costmap_interface = 1;
bool ParaCollection::has_para_costmap_interface() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParaCollection::set_has_para_costmap_interface() {
  _has_bits_[0] |= 0x00000001u;
}
void ParaCollection::clear_has_para_costmap_interface() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParaCollection::clear_para_costmap_interface() {
  if (para_costmap_interface_ != NULL) para_costmap_interface_->::or_costmap::ParaCostmapInterface::Clear();
  clear_has_para_costmap_interface();
}
const ::or_costmap::ParaCostmapInterface& ParaCollection::para_costmap_interface() const {
  const ::or_costmap::ParaCostmapInterface* p = para_costmap_interface_;
  // @@protoc_insertion_point(field_get:or_costmap.ParaCollection.para_costmap_interface)
  return p != NULL ? *p : *reinterpret_cast<const ::or_costmap::ParaCostmapInterface*>(
      &::or_costmap::_ParaCostmapInterface_default_instance_);
}
::or_costmap::ParaCostmapInterface* ParaCollection::mutable_para_costmap_interface() {
  set_has_para_costmap_interface();
  if (para_costmap_interface_ == NULL) {
    para_costmap_interface_ = new ::or_costmap::ParaCostmapInterface;
  }
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCollection.para_costmap_interface)
  return para_costmap_interface_;
}
::or_costmap::ParaCostmapInterface* ParaCollection::release_para_costmap_interface() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCollection.para_costmap_interface)
  clear_has_para_costmap_interface();
  ::or_costmap::ParaCostmapInterface* temp = para_costmap_interface_;
  para_costmap_interface_ = NULL;
  return temp;
}
void ParaCollection::set_allocated_para_costmap_interface(::or_costmap::ParaCostmapInterface* para_costmap_interface) {
  delete para_costmap_interface_;
  para_costmap_interface_ = para_costmap_interface;
  if (para_costmap_interface) {
    set_has_para_costmap_interface();
  } else {
    clear_has_para_costmap_interface();
  }
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCollection.para_costmap_interface)
}

// required .or_costmap.Footprint footprint = 2;
bool ParaCollection::has_footprint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParaCollection::set_has_footprint() {
  _has_bits_[0] |= 0x00000002u;
}
void ParaCollection::clear_has_footprint() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParaCollection::clear_footprint() {
  if (footprint_ != NULL) footprint_->::or_costmap::Footprint::Clear();
  clear_has_footprint();
}
const ::or_costmap::Footprint& ParaCollection::footprint() const {
  const ::or_costmap::Footprint* p = footprint_;
  // @@protoc_insertion_point(field_get:or_costmap.ParaCollection.footprint)
  return p != NULL ? *p : *reinterpret_cast<const ::or_costmap::Footprint*>(
      &::or_costmap::_Footprint_default_instance_);
}
::or_costmap::Footprint* ParaCollection::mutable_footprint() {
  set_has_footprint();
  if (footprint_ == NULL) {
    footprint_ = new ::or_costmap::Footprint;
  }
  // @@protoc_insertion_point(field_mutable:or_costmap.ParaCollection.footprint)
  return footprint_;
}
::or_costmap::Footprint* ParaCollection::release_footprint() {
  // @@protoc_insertion_point(field_release:or_costmap.ParaCollection.footprint)
  clear_has_footprint();
  ::or_costmap::Footprint* temp = footprint_;
  footprint_ = NULL;
  return temp;
}
void ParaCollection::set_allocated_footprint(::or_costmap::Footprint* footprint) {
  delete footprint_;
  footprint_ = footprint;
  if (footprint) {
    set_has_footprint();
  } else {
    clear_has_footprint();
  }
  // @@protoc_insertion_point(field_set_allocated:or_costmap.ParaCollection.footprint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace or_costmap

// @@protoc_insertion_point(global_scope)
